/* This file contains the Segment sizes to be used for calculating the Harmonic Mean.*/
/* This values are for Big_Bunny_Dataset */


/* Segment Sizes for 10 Sec - bunny_45373bps  Representation 	*/
/*	Push		Rep_No		Seg_No		Size	*/
segmentSizes.push([	0	,	1	,	55	]);
segmentSizes.push([	0	,	2	,	56	]);
segmentSizes.push([	0	,	3	,	55	]);
segmentSizes.push([	0	,	4	,	59	]);
segmentSizes.push([	0	,	5	,	56	]);
segmentSizes.push([	0	,	6	,	55	]);
segmentSizes.push([	0	,	7	,	56	]);
segmentSizes.push([	0	,	8	,	55	]);
segmentSizes.push([	0	,	9	,	58	]);
segmentSizes.push([	0	,	10	,	54	]);
segmentSizes.push([	0	,	11	,	54	]);
segmentSizes.push([	0	,	12	,	58	]);
segmentSizes.push([	0	,	13	,	56	]);
segmentSizes.push([	0	,	14	,	56	]);
segmentSizes.push([	0	,	15	,	52	]);
segmentSizes.push([	0	,	16	,	52	]);
segmentSizes.push([	0	,	17	,	56	]);
segmentSizes.push([	0	,	18	,	56	]);
segmentSizes.push([	0	,	19	,	57	]);
segmentSizes.push([	0	,	20	,	54	]);
segmentSizes.push([	0	,	21	,	57	]);
segmentSizes.push([	0	,	22	,	59	]);
segmentSizes.push([	0	,	23	,	54	]);
segmentSizes.push([	0	,	24	,	53	]);
segmentSizes.push([	0	,	25	,	57	]);
segmentSizes.push([	0	,	26	,	54	]);
segmentSizes.push([	0	,	27	,	56	]);
segmentSizes.push([	0	,	28	,	58	]);
segmentSizes.push([	0	,	29	,	54	]);
segmentSizes.push([	0	,	30	,	55	]);
segmentSizes.push([	0	,	31	,	49	]);
segmentSizes.push([	0	,	32	,	56	]);
segmentSizes.push([	0	,	33	,	55	]);
segmentSizes.push([	0	,	34	,	58	]);
segmentSizes.push([	0	,	35	,	55	]);
segmentSizes.push([	0	,	36	,	56	]);
segmentSizes.push([	0	,	37	,	57	]);
segmentSizes.push([	0	,	38	,	56	]);
segmentSizes.push([	0	,	39	,	53	]);
segmentSizes.push([	0	,	40	,	58	]);
segmentSizes.push([	0	,	41	,	49	]);
segmentSizes.push([	0	,	42	,	51	]);
segmentSizes.push([	0	,	43	,	56	]);
segmentSizes.push([	0	,	44	,	56	]);
segmentSizes.push([	0	,	45	,	52	]);
segmentSizes.push([	0	,	46	,	54	]);
segmentSizes.push([	0	,	47	,	51	]);
segmentSizes.push([	0	,	48	,	52	]);


/* Segment Sizes for 10 Sec - bunny_176780bps  Representation */
segmentSizes.push([	1	,	1	,	218	]);
segmentSizes.push([	1	,	2	,	231	]);
segmentSizes.push([	1	,	3	,	210	]);
segmentSizes.push([	1	,	4	,	235	]);
segmentSizes.push([	1	,	5	,	232	]);
segmentSizes.push([	1	,	6	,	212	]);
segmentSizes.push([	1	,	7	,	212	]);
segmentSizes.push([	1	,	8	,	209	]);
segmentSizes.push([	1	,	9	,	205	]);
segmentSizes.push([	1	,	10	,	189	]);
segmentSizes.push([	1	,	11	,	211	]);
segmentSizes.push([	1	,	12	,	225	]);
segmentSizes.push([	1	,	13	,	226	]);
segmentSizes.push([	1	,	14	,	229	]);
segmentSizes.push([	1	,	15	,	212	]);
segmentSizes.push([	1	,	16	,	215	]);
segmentSizes.push([	1	,	17	,	220	]);
segmentSizes.push([	1	,	18	,	209	]);
segmentSizes.push([	1	,	19	,	230	]);
segmentSizes.push([	1	,	20	,	205	]);
segmentSizes.push([	1	,	21	,	214	]);
segmentSizes.push([	1	,	22	,	233	]);
segmentSizes.push([	1	,	23	,	192	]);
segmentSizes.push([	1	,	24	,	213	]);
segmentSizes.push([	1	,	25	,	226	]);
segmentSizes.push([	1	,	26	,	212	]);
segmentSizes.push([	1	,	27	,	224	]);
segmentSizes.push([	1	,	28	,	230	]);
segmentSizes.push([	1	,	29	,	213	]);
segmentSizes.push([	1	,	30	,	213	]);
segmentSizes.push([	1	,	31	,	191	]);
segmentSizes.push([	1	,	32	,	228	]);
segmentSizes.push([	1	,	33	,	228	]);
segmentSizes.push([	1	,	34	,	219	]);
segmentSizes.push([	1	,	35	,	218	]);
segmentSizes.push([	1	,	36	,	228	]);
segmentSizes.push([	1	,	37	,	222	]);
segmentSizes.push([	1	,	38	,	196	]);
segmentSizes.push([	1	,	39	,	173	]);
segmentSizes.push([	1	,	40	,	203	]);
segmentSizes.push([	1	,	41	,	192	]);
segmentSizes.push([	1	,	42	,	211	]);
segmentSizes.push([	1	,	43	,	223	]);
segmentSizes.push([	1	,	44	,	227	]);
segmentSizes.push([	1	,	45	,	218	]);
segmentSizes.push([	1	,	46	,	217	]);
segmentSizes.push([	1	,	47	,	198	]);
segmentSizes.push([	1	,	48	,	205	]);


/* Segment Sizes for 10 Sec - bunny_317328bps  Representation */
segmentSizes.push([	2	,	1	,	436	]);
segmentSizes.push([	2	,	2	,	405	]);
segmentSizes.push([	2	,	3	,	381	]);
segmentSizes.push([	2	,	4	,	475	]);
segmentSizes.push([	2	,	5	,	457	]);
segmentSizes.push([	2	,	6	,	361	]);
segmentSizes.push([	2	,	7	,	384	]);
segmentSizes.push([	2	,	8	,	379	]);
segmentSizes.push([	2	,	9	,	305	]);
segmentSizes.push([	2	,	10	,	228	]);
segmentSizes.push([	2	,	11	,	332	]);
segmentSizes.push([	2	,	12	,	427	]);
segmentSizes.push([	2	,	13	,	414	]);
segmentSizes.push([	2	,	14	,	458	]);
segmentSizes.push([	2	,	15	,	387	]);
segmentSizes.push([	2	,	16	,	365	]);
segmentSizes.push([	2	,	17	,	382	]);
segmentSizes.push([	2	,	18	,	323	]);
segmentSizes.push([	2	,	19	,	446	]);
segmentSizes.push([	2	,	20	,	339	]);
segmentSizes.push([	2	,	21	,	356	]);
segmentSizes.push([	2	,	22	,	452	]);
segmentSizes.push([	2	,	23	,	322	]);
segmentSizes.push([	2	,	24	,	307	]);
segmentSizes.push([	2	,	25	,	436	]);
segmentSizes.push([	2	,	26	,	382	]);
segmentSizes.push([	2	,	27	,	383	]);
segmentSizes.push([	2	,	28	,	449	]);
segmentSizes.push([	2	,	29	,	323	]);
segmentSizes.push([	2	,	30	,	367	]);
segmentSizes.push([	2	,	31	,	404	]);
segmentSizes.push([	2	,	32	,	451	]);
segmentSizes.push([	2	,	33	,	428	]);
segmentSizes.push([	2	,	34	,	395	]);
segmentSizes.push([	2	,	35	,	435	]);
segmentSizes.push([	2	,	36	,	448	]);
segmentSizes.push([	2	,	37	,	444	]);
segmentSizes.push([	2	,	38	,	335	]);
segmentSizes.push([	2	,	39	,	225	]);
segmentSizes.push([	2	,	40	,	319	]);
segmentSizes.push([	2	,	41	,	324	]);
segmentSizes.push([	2	,	42	,	443	]);
segmentSizes.push([	2	,	43	,	449	]);
segmentSizes.push([	2	,	44	,	445	]);
segmentSizes.push([	2	,	45	,	365	]);
segmentSizes.push([	2	,	46	,	370	]);
segmentSizes.push([	2	,	47	,	387	]);
segmentSizes.push([	2	,	48	,	352	]);

/* Segment Sizes for 10 Sec - bunny_568500bps  Representation */
segmentSizes.push([	3	,	1	,	752	]);
segmentSizes.push([	3	,	2	,	730	]);
segmentSizes.push([	3	,	3	,	677	]);
segmentSizes.push([	3	,	4	,	814	]);
segmentSizes.push([	3	,	5	,	810	]);
segmentSizes.push([	3	,	6	,	647	]);
segmentSizes.push([	3	,	7	,	679	]);
segmentSizes.push([	3	,	8	,	675	]);
segmentSizes.push([	3	,	9	,	527	]);
segmentSizes.push([	3	,	10	,	422	]);
segmentSizes.push([	3	,	11	,	600	]);
segmentSizes.push([	3	,	12	,	739	]);
segmentSizes.push([	3	,	13	,	748	]);
segmentSizes.push([	3	,	14	,	828	]);
segmentSizes.push([	3	,	15	,	719	]);
segmentSizes.push([	3	,	16	,	656	]);
segmentSizes.push([	3	,	17	,	691	]);
segmentSizes.push([	3	,	18	,	568	]);
segmentSizes.push([	3	,	19	,	779	]);
segmentSizes.push([	3	,	20	,	607	]);
segmentSizes.push([	3	,	21	,	634	]);
segmentSizes.push([	3	,	22	,	779	]);
segmentSizes.push([	3	,	23	,	587	]);
segmentSizes.push([	3	,	24	,	566	]);
segmentSizes.push([	3	,	25	,	773	]);
segmentSizes.push([	3	,	26	,	675	]);
segmentSizes.push([	3	,	27	,	689	]);
segmentSizes.push([	3	,	28	,	798	]);
segmentSizes.push([	3	,	29	,	646	]);
segmentSizes.push([	3	,	30	,	680	]);
segmentSizes.push([	3	,	31	,	723	]);
segmentSizes.push([	3	,	32	,	784	]);
segmentSizes.push([	3	,	33	,	745	]);
segmentSizes.push([	3	,	34	,	681	]);
segmentSizes.push([	3	,	35	,	769	]);
segmentSizes.push([	3	,	36	,	805	]);
segmentSizes.push([	3	,	37	,	785	]);
segmentSizes.push([	3	,	38	,	626	]);
segmentSizes.push([	3	,	39	,	433	]);
segmentSizes.push([	3	,	40	,	579	]);
segmentSizes.push([	3	,	41	,	595	]);
segmentSizes.push([	3	,	42	,	790	]);
segmentSizes.push([	3	,	43	,	788	]);
segmentSizes.push([	3	,	44	,	787	]);
segmentSizes.push([	3	,	45	,	643	]);
segmentSizes.push([	3	,	46	,	635	]);
segmentSizes.push([	3	,	47	,	708	]);
segmentSizes.push([	3	,	48	,	649	]);

/* Segment Sizes for 10 Sec - bunny_987061bps  Representation */
segmentSizes.push([	4	,	1	,	1300	]);
segmentSizes.push([	4	,	2	,	1200	]);
segmentSizes.push([	4	,	3	,	1100	]);
segmentSizes.push([	4	,	4	,	1400	]);
segmentSizes.push([	4	,	5	,	1400	]);
segmentSizes.push([	4	,	6	,	1100	]);
segmentSizes.push([	4	,	7	,	1200	]);
segmentSizes.push([	4	,	8	,	1200	]);
segmentSizes.push([	4	,	9	,	910	]);
segmentSizes.push([	4	,	10	,	772	]);
segmentSizes.push([	4	,	11	,	1100	]);
segmentSizes.push([	4	,	12	,	1200	]);
segmentSizes.push([	4	,	13	,	1300	]);
segmentSizes.push([	4	,	14	,	1400	]);
segmentSizes.push([	4	,	15	,	1200	]);
segmentSizes.push([	4	,	16	,	1100	]);
segmentSizes.push([	4	,	17	,	1200	]);
segmentSizes.push([	4	,	18	,	1000	]);
segmentSizes.push([	4	,	19	,	1300	]);
segmentSizes.push([	4	,	20	,	1000	]);
segmentSizes.push([	4	,	21	,	1100	]);
segmentSizes.push([	4	,	22	,	1300	]);
segmentSizes.push([	4	,	23	,	1000	]);
segmentSizes.push([	4	,	24	,	1000	]);
segmentSizes.push([	4	,	25	,	1300	]);
segmentSizes.push([	4	,	26	,	1100	]);
segmentSizes.push([	4	,	27	,	1200	]);
segmentSizes.push([	4	,	28	,	1300	]);
segmentSizes.push([	4	,	29	,	1200	]);
segmentSizes.push([	4	,	30	,	1200	]);
segmentSizes.push([	4	,	31	,	1200	]);
segmentSizes.push([	4	,	32	,	1300	]);
segmentSizes.push([	4	,	33	,	1200	]);
segmentSizes.push([	4	,	34	,	1100	]);
segmentSizes.push([	4	,	35	,	1300	]);
segmentSizes.push([	4	,	36	,	1300	]);
segmentSizes.push([	4	,	37	,	1300	]);
segmentSizes.push([	4	,	38	,	1100	]);
segmentSizes.push([	4	,	39	,	790	]);
segmentSizes.push([	4	,	40	,	1000	]);
segmentSizes.push([	4	,	41	,	1000	]);
segmentSizes.push([	4	,	42	,	1300	]);
segmentSizes.push([	4	,	43	,	1300	]);
segmentSizes.push([	4	,	44	,	1300	]);
segmentSizes.push([	4	,	45	,	1000	]);
segmentSizes.push([	4	,	46	,	1100	]);
segmentSizes.push([	4	,	47	,	1200	]);
segmentSizes.push([	4	,	48	,	1100	]);


/* Segment Sizes for 10 Sec - bunny_1431232bps  Representation */
segmentSizes.push([	5	,	1	,	2100	]);
segmentSizes.push([	5	,	2	,	1800	]);
segmentSizes.push([	5	,	3	,	1800	]);
segmentSizes.push([	5	,	4	,	2300	]);
segmentSizes.push([	5	,	5	,	2100	]);
segmentSizes.push([	5	,	6	,	1700	]);
segmentSizes.push([	5	,	7	,	1600	]);
segmentSizes.push([	5	,	8	,	1800	]);
segmentSizes.push([	5	,	9	,	1100	]);
segmentSizes.push([	5	,	10	,	857	]);
segmentSizes.push([	5	,	11	,	1200	]);
segmentSizes.push([	5	,	12	,	1800	]);
segmentSizes.push([	5	,	13	,	1700	]);
segmentSizes.push([	5	,	14	,	1800	]);
segmentSizes.push([	5	,	15	,	1700	]);
segmentSizes.push([	5	,	16	,	1400	]);
segmentSizes.push([	5	,	17	,	1500	]);
segmentSizes.push([	5	,	18	,	1200	]);
segmentSizes.push([	5	,	19	,	2100	]);
segmentSizes.push([	5	,	20	,	1500	]);
segmentSizes.push([	5	,	21	,	1400	]);
segmentSizes.push([	5	,	22	,	1900	]);
segmentSizes.push([	5	,	23	,	1400	]);
segmentSizes.push([	5	,	24	,	1100	]);
segmentSizes.push([	5	,	25	,	2100	]);
segmentSizes.push([	5	,	26	,	1700	]);
segmentSizes.push([	5	,	27	,	1600	]);
segmentSizes.push([	5	,	28	,	2100	]);
segmentSizes.push([	5	,	29	,	1500	]);
segmentSizes.push([	5	,	30	,	1600	]);
segmentSizes.push([	5	,	31	,	1900	]);
segmentSizes.push([	5	,	32	,	2200	]);
segmentSizes.push([	5	,	33	,	2000	]);
segmentSizes.push([	5	,	34	,	1500	]);
segmentSizes.push([	5	,	35	,	2100	]);
segmentSizes.push([	5	,	36	,	2300	]);
segmentSizes.push([	5	,	37	,	2200	]);
segmentSizes.push([	5	,	38	,	1600	]);
segmentSizes.push([	5	,	39	,	920	]);
segmentSizes.push([	5	,	40	,	1300	]);
segmentSizes.push([	5	,	41	,	1200	]);
segmentSizes.push([	5	,	42	,	1800	]);
segmentSizes.push([	5	,	43	,	2100	]);
segmentSizes.push([	5	,	44	,	2100	]);
segmentSizes.push([	5	,	45	,	1400	]);
segmentSizes.push([	5	,	46	,	1300	]);
segmentSizes.push([	5	,	47	,	2000	]);
segmentSizes.push([	5	,	48	,	1400	]);



/* Segment Sizes for 10 Sec - bunny_2384387bps  Representation */
segmentSizes.push([	6	,	1	,	3300	]);
segmentSizes.push([	6	,	2	,	3000	]);
segmentSizes.push([	6	,	3	,	2800	]);
segmentSizes.push([	6	,	4	,	3500	]);
segmentSizes.push([	6	,	5	,	3400	]);
segmentSizes.push([	6	,	6	,	2700	]);
segmentSizes.push([	6	,	7	,	2900	]);
segmentSizes.push([	6	,	8	,	2900	]);
segmentSizes.push([	6	,	9	,	1900	]);
segmentSizes.push([	6	,	10	,	1500	]);
segmentSizes.push([	6	,	11	,	2200	]);
segmentSizes.push([	6	,	12	,	3000	]);
segmentSizes.push([	6	,	13	,	3000	]);
segmentSizes.push([	6	,	14	,	3400	]);
segmentSizes.push([	6	,	15	,	3000	]);
segmentSizes.push([	6	,	16	,	2600	]);
segmentSizes.push([	6	,	17	,	2800	]);
segmentSizes.push([	6	,	18	,	2300	]);
segmentSizes.push([	6	,	19	,	3300	]);
segmentSizes.push([	6	,	20	,	2500	]);
segmentSizes.push([	6	,	21	,	2400	]);
segmentSizes.push([	6	,	22	,	3100	]);
segmentSizes.push([	6	,	23	,	2400	]);
segmentSizes.push([	6	,	24	,	2200	]);
segmentSizes.push([	6	,	25	,	3200	]);
segmentSizes.push([	6	,	26	,	2800	]);
segmentSizes.push([	6	,	27	,	2800	]);
segmentSizes.push([	6	,	28	,	3300	]);
segmentSizes.push([	6	,	29	,	2800	]);
segmentSizes.push([	6	,	30	,	2800	]);
segmentSizes.push([	6	,	31	,	3000	]);
segmentSizes.push([	6	,	32	,	3300	]);
segmentSizes.push([	6	,	33	,	3100	]);
segmentSizes.push([	6	,	34	,	2600	]);
segmentSizes.push([	6	,	35	,	3300	]);
segmentSizes.push([	6	,	36	,	3400	]);
segmentSizes.push([	6	,	37	,	3400	]);
segmentSizes.push([	6	,	38	,	2900	]);
segmentSizes.push([	6	,	39	,	1700	]);
segmentSizes.push([	6	,	40	,	2300	]);
segmentSizes.push([	6	,	41	,	2200	]);
segmentSizes.push([	6	,	42	,	3000	]);
segmentSizes.push([	6	,	43	,	3300	]);
segmentSizes.push([	6	,	44	,	3200	]);
segmentSizes.push([	6	,	45	,	2300	]);
segmentSizes.push([	6	,	46	,	2400	]);
segmentSizes.push([	6	,	47	,	3000	]);
segmentSizes.push([	6	,	48	,	2500	]);


/* Segment Sizes for 10 Sec - bunny_3493765bps  Representation */
segmentSizes.push([	7	,	1	,	6000	]);
segmentSizes.push([	7	,	2	,	4900	]);
segmentSizes.push([	7	,	3	,	5200	]);
segmentSizes.push([	7	,	4	,	6000	]);
segmentSizes.push([	7	,	5	,	4800	]);
segmentSizes.push([	7	,	6	,	4300	]);
segmentSizes.push([	7	,	7	,	3400	]);
segmentSizes.push([	7	,	8	,	5000	]);
segmentSizes.push([	7	,	9	,	2300	]);
segmentSizes.push([	7	,	10	,	1700	]);
segmentSizes.push([	7	,	11	,	2400	]);
segmentSizes.push([	7	,	12	,	4100	]);
segmentSizes.push([	7	,	13	,	3700	]);
segmentSizes.push([	7	,	14	,	3700	]);
segmentSizes.push([	7	,	15	,	3500	]);
segmentSizes.push([	7	,	16	,	2900	]);
segmentSizes.push([	7	,	17	,	3500	]);
segmentSizes.push([	7	,	18	,	2600	]);
segmentSizes.push([	7	,	19	,	4700	]);
segmentSizes.push([	7	,	20	,	3600	]);
segmentSizes.push([	7	,	21	,	2900	]);
segmentSizes.push([	7	,	22	,	4300	]);
segmentSizes.push([	7	,	23	,	3400	]);
segmentSizes.push([	7	,	24	,	2300	]);
segmentSizes.push([	7	,	25	,	5200	]);
segmentSizes.push([	7	,	26	,	3800	]);
segmentSizes.push([	7	,	27	,	3600	]);
segmentSizes.push([	7	,	28	,	5600	]);
segmentSizes.push([	7	,	29	,	3700	]);
segmentSizes.push([	7	,	30	,	3400	]);
segmentSizes.push([	7	,	31	,	5000	]);
segmentSizes.push([	7	,	32	,	5300	]);
segmentSizes.push([	7	,	33	,	4900	]);
segmentSizes.push([	7	,	34	,	3200	]);
segmentSizes.push([	7	,	35	,	6200	]);
segmentSizes.push([	7	,	36	,	6700	]);
segmentSizes.push([	7	,	37	,	6500	]);
segmentSizes.push([	7	,	38	,	3800	]);
segmentSizes.push([	7	,	39	,	1900	]);
segmentSizes.push([	7	,	40	,	2800	]);
segmentSizes.push([	7	,	41	,	2500	]);
segmentSizes.push([	7	,	42	,	3400	]);
segmentSizes.push([	7	,	43	,	5700	]);
segmentSizes.push([	7	,	44	,	5200	]);
segmentSizes.push([	7	,	45	,	3200	]);
segmentSizes.push([	7	,	46	,	2700	]);
segmentSizes.push([	7	,	47	,	6000	]);
segmentSizes.push([	7	,	48	,	2900	]);

/*===================================================*/

